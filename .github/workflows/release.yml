name: Build and upload site gh-pages

on:
  push:
    branches:
      - master
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: |
        echo "repository variable : $S3_REGION"
        npm run prod
      env:
        S3_ENDPOINT: ${{ vars.S3_ENDPOINT }}
        S3_REGION: ${{ vars.S3_REGION }}
        S3_BUCKET: ${{ vars.S3_BUCKET }}
        S3_KEY_ID: ${{ secrets.S3_KEY_ID }}
        S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
        S3_TELEGRAM_STORAGE_FILENAME: ${{ vars.S3_TELEGRAM_STORAGE_FILENAME }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHANNEL_ID: ${{ vars.TELEGRAM_CHANNEL_ID }}
        TELEGRAM_CHANNEL_URL: ${{ vars.TELEGRAM_CHANNEL_URL }}
        PATH_PREFIX: ${{ github.event.repository.name }}
        ONLY_POSTS_WITH_TAGS: ${{ vars.ONLY_POSTS_WITH_TAGS }}

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: './build'

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
